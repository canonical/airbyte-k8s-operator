# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = fmt, lint, static, unit, coverage-report
min_version = 4.0.0
max-line-length=120

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:fmt]
description = Format the code
deps =
    black==22.8.0
    isort==5.10.1
commands =
    isort {[vars]src_path} {[vars]tests_path}
    black {[vars]src_path} {[vars]tests_path}

[testenv:lint]
description = Lint the code
deps =
    mypy
    pylint
    pydocstyle
    pytest
    black==22.8.0
    codespell==2.2.1
    flake8==5.0.4
    flake8-builtins==1.5.3
    flake8-copyright==0.2.3
    flake8-docstrings==1.6.0
    isort==5.10.1
    pep8-naming==0.13.2
    pyproject-flake8==5.0.4.post1
    flake8-docstrings-complete>=1.0.3
    flake8-test-docs>=1.0
commands =
    pydocstyle {[vars]src_path}
    codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg
    pflake8 {[vars]src_path} {[vars]tests_path}
    isort --check-only --diff {[vars]src_path} {[vars]tests_path}
    black --check --diff {[vars]src_path} {[vars]tests_path}
    mypy {[vars]all_path} --ignore-missing-imports --follow-imports=skip --install-types --non-interactive
    pylint {[vars]src_path} {[vars]tests_path} --disable=E0401,W1203,W0613,W0718,R0903,W1514,C0103,R0913,C0301,W0212,R0902,C0104,W0640,R0801,W0511,R0914,R0912,E1120


[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {posargs} \
                 {[vars]tests_path}/unit
    coverage report

[testenv:coverage-report]
description = Create test coverage report
deps =
    coverage[toml]
    pytest
    -r{toxinidir}/requirements.txt
commands =
    coverage report

[testenv:static]
description = Run static analysis tests
deps =
    bandit[toml]
    -r{toxinidir}/requirements.txt
commands =
    bandit -c {toxinidir}/pyproject.toml -r {[vars]src_path} {[vars]tests_path}

[testenv:integration]
description = Run integration tests
deps =
    ipdb==0.13.9
    juju==3.5.2.0
    pytest==7.1.3
    pytest-operator==0.35.0
    temporalio==1.6.0
    pytest-asyncio==0.21
    -r{toxinidir}/requirements.txt
commands =
    pytest -v \
           -s \
           --tb native \
           --log-cli-level=INFO \
           {posargs} \
           {[vars]tests_path}/integration/test_charm.py
